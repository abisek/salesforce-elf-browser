.well
  %form.form-inline{method: 'get', action: ''}
    .form-group
      %label{for: 'daterange'}
        Date Range
      %input#daterange.form-control{type: "text", size: 24, name: 'daterange', value: "#{@start_date} to #{@end_date}"}

    .form-group
      %label{for: 'starttime'}
        Start Time
      %input#starttime.form-control{type: "text", size: 24, name: 'starttime', value: "8"}

    .form-group
      %label{for: 'endtime'}
        End Time
      %input#endtime.form-control{type: "text", size: 24, name: 'endtime', value: "21"}

    .form-group
      %label
        Event Type
      = select_tag('eventtype', options_for_select(@event_types, @event_type), class: 'form-control')
    %button.btn.btn-primary{type: 'submit'}
      Apply
    = link_to('Clear', event_log_files_path, class: "btn btn-default")


:javascript
  $(document).ready(function() {
    $('#daterange').daterangepicker({
      format: 'YYYY-MM-DD',
      startDate: moment("#{@start_date}"),
      endDate: moment("#{@end_date}"),
      ranges: {
         'Today': [moment(), moment()],
         'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
         'Last 7 Days': [moment().subtract(6, 'days'), moment()],
         'Last 30 Days': [moment().subtract(29, 'days'), moment()],
         'This Month': [moment().startOf('month'), moment().endOf('month')]
        },
      separator: ' to '
    });
  });

- flash.each do |type, value|
  - if type == "warnings" && !value.nil? && !value.empty?
    .alert.alert-warning.alert-dismissible.fade.in{:role => "alert"}
      %button.close{"data-dismiss" => "alert", :type => "button"}
        %span Ã—
      %ul
      - value.each do |error_message|
        %li
          = error_message


- if @log_files.empty?
  .alert.alert-info.alert-dismissible.fade.in{role: "alert"}
    %button.close{"data-dismiss" => "alert", :type => "button"}
      %span x
    Zero files available. Try changing query parameters.
- else
  %table.table.table-striped.table-bordered.table-hover
    %thead
      %tr
        %th Action
        %th Event Type
        %th Log Date
        - if @has_one_hr_elf
          %th Log Hour
        %th Log Size (in bytes)
        - if @has_one_hr_elf
          %th Sequence
          %th Interval

    %tbody
      - @log_files.each do |log_file|
        %tr
          %td.text-center
            -if log_file.LogFileLength <= Rails.configuration.x.elf.max_download_file_size_in_bytes
              = link_to(event_log_file_path(log_file.Id), "data-toggle" => "tooltip", title: "Direct download event log file", class: "btn btn-success btn-xs", onClick: "ga('send', 'event', { eventCategory: 'file', eventAction: 'download', eventLabel: '#{log_file.EventType}'});") do
                %span.glyphicon.glyphicon-download-alt
            - else
              = link_to(event_log_file_path(log_file.Id), "data-toggle" => "tooltip", title: "Files over #{number_with_delimiter(Rails.configuration.x.elf.max_download_file_size_in_bytes)} bytes cannot be downloaded from ELF Browser. Try cURL download shell script instead.", class: "btn btn-default btn-xs disabled") do
                %span.glyphicon.glyphicon-download-alt
            &nbsp;
            = link_to(event_log_file_path(log_file.Id, script: 1), "data-toggle" => "tooltip", title: "Download event log file with cURL shell script", class: "btn btn-info btn-xs", onClick: "ga('send', 'event', { eventCategory: 'script', eventAction: 'download', eventLabel: '#{log_file.EventType}'});") do
              %span.glyphicon.glyphicon-file
          %td
            = log_file.EventType
          %td
            = log_file.LogDate.strftime("%Y-%m-%d")
          - if @has_one_hr_elf
            %td
              = log_file.LogDate.strftime("%H")
          %td.text-right
            = number_with_delimiter(log_file.LogFileLength)
          - if @has_one_hr_elf
            %td
              = log_file.Sequence
            %td
              = log_file.Interval
